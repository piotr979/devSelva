{% extends 'front/base.html.twig' %}

{% block title %}Log in!
{% endblock %}

{% block body %}

	<form method="post">
		<div class="login-form__wrapper">
			{% if app.user %}
				<div class="mb-3">
					You are logged in as
					{{ app.user.username }},
					<a href="{{ path('app_logout') }}">Logout</a>
				</div>
			{% endif %}

			<h3 class="h3 txt-center mt-2 mb-2 txt-light">Please sign in</h3>
			<label class="txt-light" for="inputEmail">Email</label>
			<input type="email" value="{{ last_username }}" name="email" id="inputEmail" class="txt-light form-control" autocomplete="email" required autofocus>
			<label class="txt-light mt-1" for="inputPassword">Password</label>
			<input type="password" name="password" id="inputPassword" class="txt-light form-control" autocomplete="current-password" required>

			<input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">
			<input type="hidden" id="g-recaptcha-response" name="g-recaptcha-response">
			<input
			type="hidden" name="action" value="validate_captcha">
			{#
						        Uncomment this section and add a remember_me option below your firewall to activate remember me functionality.
						        See https://symfony.com/doc/current/security/remember_me.html
						
						        <div class="checkbox mb-3">
						            <label>
						                <input type="checkbox" name="_remember_me"> Remember me
						            </label>
						        </div>
						    #}
			{% if error %}
				<div class="login-form__message">{{ error.messageKey|trans(error.messageData, 'security') }}</div>
			{% endif %}
			<button class="btn mt-2 btn-lg btn-teritary" type="submit">
				Sign in
			</button>
			<p class="login-head">Login</p>
			<p class="login-sub">admin@admin.com</p>
			<p class="login-pass">Pass</p>
			<p class="login-sub">123456</p>
		</div>
	</form>

{% endblock %}
{% block javascripts %}
	{{ parent() }}

	<script src="https://www.google.com/recaptcha/api.js"></script>
	<script>
		grecaptcha.ready(function () {
// do request for recaptcha token
// response is promise with passed token
grecaptcha.execute('6LfEFFgeAAAAAEsoX70Ab5ImMTQlQcWtl6mVivAL', {action: 'validate_captcha'}).then(function (token) { // add token value to form
document.getElementById('g-recaptcha-response').value = token;
});
});
	</script>
{% endblock %}
